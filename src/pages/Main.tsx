import React, {useState, useEffect, useContext} from 'react';
import Header from '../components/Header';
import {Context}  from '../context/Store';
import TimeBlock from '../components/TimeBlock';
import NoDeliverySlot from '../components/NoDeliverySlot';
import {DateFormatter} from '../utils/Index';
import {getTotalOrderPerDeliveryTime} from '../utils/Index';                                                                                                                                           
import { Order, OrderObject} from "../context/Interfaces";


function Main() {
  
  const [state, dispatch] = useContext(Context);
  const [deliveryTimes, setDeliveryTimes] = useState(["10:30", "12:30", "18:30"]);
  const [orders, setOrders] = useState<Order[]>([]);
  const [dailyOrders, setDailyOrders] = useState<OrderObject[]>([]);

  const getdataForDay = (data:Order[]) => {
    
    let orderObjects: OrderObject[] = [];
    let ordersForDay = data.filter(order => order.date === DateFormatter(state.dateSelected).formattedDate); //get orders for selected day
    setOrders(ordersForDay);

    let totalOrderPerTime = getTotalOrderPerDeliveryTime(orders);

    deliveryTimes.forEach(async(time) => {
      let orderObject : OrderObject = {
          key: Math.random(),
          time: time,
          maximumOrders : DateFormatter(state.dateSelected).maximumOrders,
          ordersPlaced : totalOrderPerTime [time]? totalOrderPerTime [time] : 0
      }
      orderObjects.push(orderObject);
    });
    setDailyOrders(orderObjects);
    
  }
  

  const fetchData = () => {
    fetch('sample-orders.json',
    {
      headers : { 
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      }
    }
    ).then(function(response){
        return response.json();
    }).then(function(data) {
        dispatch({type:"SET",key:"orders", payload: data});
        getdataForDay(data);
      });
  }

  const placeOrder = (time:  string) =>{
      let orders = state.orders;
      let order : Order = {
        date: DateFormatter(state.dateSelected).formattedDate,
        time: time,
        orderId: Math.random().toString(36).slice(2), // orderId can be autogenerated from the backend
        customerId: state.customerId
      }
      orders.push(order);
      dispatch({type:"UPDATE",key:"orders", payload: orders});
      console.log(JSON.stringify(state.orders));
  }

  useEffect(()=>{
    fetchData()
  },[state.dateSelected])

  const renderTimeBlock = () => {
      if((DateFormatter(state.dateSelected).dayOfWeek !== "Sunday") && (DateFormatter(state.dateSelected).dayOfWeek !== "Sarturday")){
        return <>
          {dailyOrders.map(function(dailyOrder:OrderObject){
              return  <TimeBlock key={dailyOrder.key}
                dailyOrder = {dailyOrder}
                onClick={() =>placeOrder(dailyOrder.time)}
              />
          })}
          </>
      }else{
        return <NoDeliverySlot day={DateFormatter(state.dateSelected).dayOfWeek}/>
      }
  }

  return (
    <div className='page-wrapper'>
      <h3>Select date and preffered time of delivery</h3>
      <div className='main-content'>
      <Header/>
        {renderTimeBlock()}
      </div>
    </div>
  );
}

export default Main;
